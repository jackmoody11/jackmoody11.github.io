{"componentChunkName":"component---src-templates-euler-tsx","path":"/euler/problem-3/","result":{"data":{"mdx":{"fields":{"slug":"/problem-3/"},"frontmatter":{"posttype":"euler","tags":["Project Euler","Python","Java","C"],"title":"Problem 3","date":"2020-04-03"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"posttype\": \"euler\",\n  \"title\": \"Problem 3\",\n  \"date\": \"2020-04-03\",\n  \"tags\": [\"Project Euler\", \"Python\", \"Java\", \"C\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Card, {\n    title: \"Problem 3 - Largest Prime Factor\",\n    mdxType: \"Card\"\n  }, \"The prime factors of 13195 are 5, 7, 13 and 29. What is the largest prime factor of the number 600851475143?\"), mdx(EulerSolution, {\n    mdxType: \"EulerSolution\"\n  }, \"A number is said to be prime if the only natural numbers that divide itself are 1 and itself. By the Fundamental Theorem of Arithmetic, every number has a unique representation as a product of primes (up to permutations of the prime products). Therefore, as long as 600,851,475,143 is not prime,\", mdx(\"a\", {\n    href: \"https://math.stackexchange.com/questions/63276/is-a-prime-factor-of-a-number-always-less-than-its-square-root\"\n  }, \"at least all but one of its prime divisors\"), \" must be less than \", mdx(InlineMath, {\n    math: \"\\\\sqrt{600,851,475,143}\",\n    mdxType: \"InlineMath\"\n  }), \". That is, if we keep dividing the target of 600,851,475,143 by its prime divisors that are less than its square root, we will either get that the left over is greater than the max divisor we divided by and it is prime, or the max prime divisor found in the loop is the actual max divisor.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/problem-3/","prev":{"frontmatter":{"title":"Problem 2","date":"2020-04-03","tags":["Project Euler","Python","Java","C"]},"fields":{"slug":"/problem-2/"}},"next":{"frontmatter":{"title":"Problem 4","date":"2020-04-03","tags":["Project Euler","Python","Java","C"]},"fields":{"slug":"/problem-4/"}}}},"staticQueryHashes":["63159454"]}