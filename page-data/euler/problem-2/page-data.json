{"componentChunkName":"component---src-templates-euler-tsx","path":"/euler/problem-2/","result":{"data":{"mdx":{"fields":{"slug":"/problem-2/"},"frontmatter":{"posttype":"euler","tags":["Project Euler","Python","Java","C"],"title":"Problem 2","date":"2020-04-03"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"posttype\": \"euler\",\n  \"title\": \"Problem 2\",\n  \"date\": \"2020-04-03\",\n  \"tags\": [\"Project Euler\", \"Python\", \"Java\", \"C\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Card, {\n    title: \"Problem 2 - Even Fibonacci Numbers\",\n    mdxType: \"Card\"\n  }, \"Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", {\n    className: \"text-center\"\n  }, \"1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\"), \"By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\"), mdx(EulerSolution, {\n    mdxType: \"EulerSolution\"\n  }, \"Using the formula \", mdx(BlockMath, {\n    math: \"\\nF_{n} = F_{n-1} + F_{n-2} \\\\text{ for } n \\\\geq 2\\n\",\n    mdxType: \"BlockMath\"\n  }), mdx(BlockMath, {\n    math: \"\\nF_{0} = 1, F_{1} = 2\\n\",\n    mdxType: \"BlockMath\"\n  }), mdx(\"p\", null, \"we simply\\ncalculate each fibonacci up to (and possibly including) 4 million. For each fibonacci number, we add it to the total\\nif it is even.\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/problem-2/","prev":{"frontmatter":{"title":"Problem 1","date":"2020-04-03","tags":["Project Euler","Python","Java","C"]},"fields":{"slug":"/problem-1/"}},"next":{"frontmatter":{"title":"Problem 3","date":"2020-04-03","tags":["Project Euler","Python","Java","C"]},"fields":{"slug":"/problem-3/"}}}},"staticQueryHashes":["63159454"]}