{"componentChunkName":"component---src-templates-euler-tsx","path":"/euler/problem-1/","result":{"data":{"mdx":{"fields":{"slug":"/problem-1/"},"frontmatter":{"posttype":"euler","tags":["Project Euler","Python","Java","C"],"title":"Problem 1","date":"2020-04-03"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"posttype\": \"euler\",\n  \"title\": \"Problem 1\",\n  \"date\": \"2020-04-03\",\n  \"tags\": [\"Project Euler\", \"Python\", \"Java\", \"C\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Card, {\n    title: \"Problem 1 - Multiples of 3 and 5\",\n    mdxType: \"Card\"\n  }, \"If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 999.\"), mdx(\"br\", null), mdx(EulerSolution, {\n    mdxType: \"EulerSolution\"\n  }, \"Note that 3 divides 3, 6, 9, 12, ... and 5 divides 5, 10, ... while both numbers divide certain numbers (15, 30, 45, ...). Since 3 and 5 are both prime numbers, they only \\\"collide\\\" every 15, so we can find the sum of the numbers which are divisible by either 3 or 5 by summing the numbers divisible by either and then subtracting the instances where we double count (every 15). Because we are only concerned with numbers below 999, we will count to 999.\", mdx(BlockMath, {\n    math: \"\\n\\\\sum_{i=1}^{\\\\lfloor\\\\frac{999}{3}\\\\rfloor} 3i + \\\\sum_{i=1}^{\\\\lfloor\\\\frac{999}{5}\\\\rfloor} 5i -\\n    \\\\sum_{i=1}^{\\\\lfloor\\\\frac{999}{15}\\\\rfloor} 15i\\n\",\n    mdxType: \"BlockMath\"\n  }), mdx(\"p\", null, \"Noting that this is simply an arithmetic sum, and the formula for an arithmetic sum of the form\"), mdx(BlockMath, {\n    math: \"\\n    \\\\sum_{i=1}^{n} a_{n} = n\\\\left(\\\\frac{a_{1} + a_{n}}{2} \\\\right)\\n\",\n    mdxType: \"BlockMath\"\n  }), mdx(\"p\", null, \"we can calculate the formula above.\"), mdx(BlockMath, {\n    math: \"\\n\\\\text{Answer} = 333 \\\\left(\\\\frac{3 + 999}{2}\\\\right) + 199 \\\\left(\\\\frac{5 + 995}{2}\\\\right) - 66 \\\\left(\\\\frac{15 +\\n    990}{2}\\\\right)\\n\",\n    mdxType: \"BlockMath\"\n  }), mdx(\"br\", null), mdx(\"h5\", null, \"Indirect Solution\"), \"One other possibility is to simply add all numbers that are divisible from 1 to 999 if they are divisible by 3 or 5. This is what is done in the code below.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/problem-1/","prev":null,"next":{"frontmatter":{"title":"Problem 2","date":"2020-04-03","tags":["Project Euler","Python","Java","C"]},"fields":{"slug":"/problem-2/"}}}},"staticQueryHashes":["63159454"]}