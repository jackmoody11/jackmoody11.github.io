{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/templates/blog.tsx"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","query","Blog","data","pageContext","next","prev","prevLink","to","fields","slug","className","role","nextLink","title","frontmatter","tags","map","tag","moment","date","format","body"],"mappings":"iFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,kCClCF,+HAOaS,EAAQ,YAgFNC,UA1DF,SAAC,GAAiD,IAAvChB,EAAuC,EAA/CiB,KAAQjB,IAAOkB,EAAgC,EAAhCA,YACrBC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KAEVC,EACO,OAATD,EAAgB,KACd,kBAAC,IAAD,CACEE,GAAE,OAASF,EAAKG,OAAOC,KACvBC,UAAU,0BACVC,KAAK,UAHP,YAQAC,EACO,OAATR,EAAgB,KACd,kBAAC,IAAD,CACEG,GAAE,OAASH,EAAKI,OAAOC,KACvBC,UAAU,0BACVC,KAAK,UAHP,QAQJ,OACE,kBAAC,IAAD,CAAQE,MAAO5B,EAAI6B,YAAYD,OAC7B,0BAAMF,KAAK,OAAOD,UAAU,aAC1B,yBAAKA,UAAU,OACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,mBAAmBzB,EAAI6B,YAAYD,OAChD5B,EAAI6B,YAAYC,KAAKC,KAAI,SAACC,GAAD,OACxB,0BAAMP,UAAU,qBAAqBO,MAEvC,6BACA,2BAAOP,UAAU,kBACf,uBAAGA,UAAU,sBACZQ,IAAOjC,EAAI6B,YAAYK,MAAMC,OAAO,gBAEvC,6BACA,kBAAC,cAAD,KAAcnC,EAAIoC,MAClB,yBAAKX,UAAU,OACZJ,EACAM,KAIP,2BAAOF,UAAU,yBACf,yBAAKA,UAAU,6BACb,wBAAIA,UAAU,eAAd,SADF","file":"component---src-templates-blog-tsx-4139cd61472b834bb261.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport moment from \"moment\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\n\nimport Layout from \"../components/Layout\";\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(\n      fields: { slug: { eq: $slug } }\n      frontmatter: { posttype: { eq: \"blog\" } }\n    ) {\n      frontmatter {\n        posttype\n        tags\n        title\n        date\n      }\n      body\n    }\n  }\n`;\n\ntype BlogTemplate = {\n  data: any;\n  pageContext: any;\n};\n\nconst Blog = ({ data: { mdx }, pageContext }: BlogTemplate) => {\n  const { next, prev } = pageContext;\n\n  let prevLink =\n    prev === null ? null : (\n      <Link\n        to={`blog${prev.fields.slug}`}\n        className=\"btn btn-primary mr-auto\"\n        role=\"button\"\n      >\n        Previous\n      </Link>\n    );\n  let nextLink =\n    next === null ? null : (\n      <Link\n        to={`blog${next.fields.slug}`}\n        className=\"btn btn-primary ml-auto\"\n        role=\"button\"\n      >\n        Next\n      </Link>\n    );\n  return (\n    <Layout title={mdx.frontmatter.title}>\n      <main role=\"main\" className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 blog-main\">\n            <div className=\"blog-post\">\n              <h1 className=\"blog-post-title\">{mdx.frontmatter.title}</h1>\n              {mdx.frontmatter.tags.map((tag: string) => (\n                <span className=\"badge badge-light\">{tag}</span>\n              ))}\n              <br />\n              <small className=\"blog-post-meta\">\n                <i className=\"far fa-clock mr-1\"></i>\n                {moment(mdx.frontmatter.date).format(\"MMM D, YYYY\")}\n              </small>\n              <hr />\n              <MDXRenderer>{mdx.body}</MDXRenderer>\n              <div className=\"row\">\n                {prevLink}\n                {nextLink}\n              </div>\n            </div>\n          </div>\n          <aside className=\"col-md-4 blog-sidebar\">\n            <div className=\"p-3 mb-3 bg-light rounded\">\n              <h4 className=\"font-italic\">About</h4>\n              This blog includes some of my thoughts on various topics.\n            </div>\n          </aside>\n        </div>\n      </main>\n    </Layout>\n  );\n};\n\nexport default Blog;\n"],"sourceRoot":""}